{"name":"Practical Network Programming","tagline":"Companion to my Practical Network Programming course at boolan.com","body":"# Course Description\r\n* Teach common network programming techniques by examples\r\n* Focus on server-side TCP network programming on Linux\r\n* Walk-through code in C++, Python and Go\r\n\r\n# Prerequisites \r\n* Have read _Unix Network Programming_ volume 1 (either 2nd ed. or 3rd ed.) by late W. Richard Stevens\r\n* Know basics of TCP/IP, eg. IP addresses, ports,\r\n* Know how to write an echo server with basic sockets APIs in any language\r\n\r\n# Schedule\r\n\r\n## Part I Basic non-concurrent programs with blocking IO\r\n\r\n### 1. TTCP\r\n* Review basic Sockets API\r\n* Measure throughput of TCP over Gigabit Ethernet\r\n\r\n### 2. Round-trip\r\n* The only UDP example\r\n* Measure clock error between two hosts\r\n\r\n### 3. Netcat\r\n* The Swiss army knife of networking\r\n* Deal with two file descriptors simultaneously (stdin/out and TCP socket)\r\n\r\n### 4. Slow sink/source\r\n* Simulate low-bandwidth or slow peer\r\n* Generate traffic generator at given speed\r\n\r\n## Part II Concurrent programs with non-blocking IO\r\n\r\n### 5. SOCKS proxy server\r\n* Relay two TCP connections\r\n* Mismatching bandwidth?\r\n* Difference between level 4 and level 7?\r\n\r\n### 6. Sudoku Solver\r\n* Request-response model\r\n* Client connections are independent\r\n* Concurrency and parallel on multicore machines\r\n\r\n### 7. Simple memcached\r\n* Clients share the same state of the server\r\n* Efficient locking by sharding\r\n\r\n### 8. Broadcasting to TCP peers\r\n* Connections exchange data with each other\r\n* How to deal with slow clients?\r\n\r\n### 9. RPC load balancer\r\n* Better than round-robin\r\n\r\n## Part III Data processing with multiple machines\r\n### 10. Parallel N-queue\r\n### 11. Median across machines\r\n### 12. Most frequent queries\r\n### 13. Distributed sorting\r\n\r\n## Part IV Capacity provisioning, latency managing, etc. \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}